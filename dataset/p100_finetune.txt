<|instruction|>
Solve the below problem. The solution should start with an abridged problem statement. Then key observations. Then full solution based on the observations. Then C++ and Python implementations with comments.

100. A+B

time limit per test: 0.25 sec.
memory limit per test: 65536 KB


Read integers A and B from input file and write their sum in output file.


Input

Input file contains A and B (0<A,B<10001).


Output

Write answer in output file.


Sample Input

5 3
Sample Output

8

<|response|>
1. Abridged problem statement  
Given two positive integers A and B (1 ≤ A, B ≤ 10000), compute and output A + B.

2. Key observations needed to solve the problem  
- A and B are at most 10000, so A + B ≤ 20000, which easily fits in a standard 32-bit signed integer.  
- There are only two numbers to process, so any reasonable I/O method will run in constant time and use negligible memory.  
- No special edge cases (like zero or negative inputs) occur, since 0 < A, B < 10001.

3. Full solution approach based on the observations  
a. Read two integers from the input.  
b. Compute their sum with the built-in integer addition operator.  
c. Print the result.  
d. Since the input size is fixed and tiny, the time and memory complexity are both O(1).

4. C++ implementation with detailed comments  
```cpp
#include <bits/stdc++.h>
using namespace std;

int main() {
    ios::sync_with_stdio(false);
    cin.tie(nullptr);
    
    // 1. Declare variables to hold the two numbers
    int A, B;
    
    // 2. Read A and B from standard input
    cin >> A >> B;
    
    // 3. Compute the sum
    int sum = A + B;
    
    // 4. Output the result followed by a newline
    cout << sum << '\n';
    
    return 0;
}
```

5. Python implementation with detailed comments  
```python
# 1. Read a line from input, split it into two tokens, and convert each to int
A, B = map(int, input().split())

# 2. Compute the sum of the two integers
result = A + B

# 3. Print the result
print(result)
```